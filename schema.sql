-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.ai_recommendations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  product_id uuid,
  recommendation_type character varying NOT NULL,
  recommendation_text text NOT NULL,
  is_applied boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  user_id uuid NOT NULL,
  CONSTRAINT ai_recommendations_pkey PRIMARY KEY (id),
  CONSTRAINT ai_recommendations_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT ai_recommendations_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.app_settings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  shipping_base_cost numeric DEFAULT 5.00,
  label_cost numeric DEFAULT 1.00,
  cancellation_shipping_loss numeric DEFAULT 5.00,
  minimum_profit_margin numeric DEFAULT 10.00,
  auto_reorder_enabled boolean DEFAULT false,
  auto_price_adjustment_enabled boolean DEFAULT false,
  openrouter_api_key text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  user_id uuid NOT NULL,
  CONSTRAINT app_settings_pkey PRIMARY KEY (id),
  CONSTRAINT app_settings_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.canceled_orders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  sale_id uuid,
  cancellation_date timestamp with time zone DEFAULT now(),
  cancellation_type character varying DEFAULT 'before_shipping'::character varying,
  shipping_cost_loss numeric DEFAULT 0,
  product_cost_loss numeric DEFAULT 0,
  total_loss numeric DEFAULT 0,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  user_id uuid NOT NULL,
  CONSTRAINT canceled_orders_pkey PRIMARY KEY (id),
  CONSTRAINT canceled_orders_sale_id_fkey FOREIGN KEY (sale_id) REFERENCES public.sales(id),
  CONSTRAINT canceled_orders_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.invitations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  code text NOT NULL UNIQUE CHECK (char_length(code) >= 6),
  email text,
  created_by uuid,
  used_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone,
  used_at timestamp with time zone,
  is_admin boolean DEFAULT false,
  status character varying DEFAULT 'active'::character varying,
  CONSTRAINT invitations_pkey PRIMARY KEY (id),
  CONSTRAINT invitations_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT invitations_used_by_fkey FOREIGN KEY (used_by) REFERENCES auth.users(id)
);
CREATE TABLE public.order_batch_consumption (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  order_id text NOT NULL,
  order_sku character varying NOT NULL,
  product_batch_id uuid NOT NULL,
  quantity_consumed integer NOT NULL CHECK (quantity_consumed > 0),
  user_id uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT order_batch_consumption_pkey PRIMARY KEY (id),
  CONSTRAINT order_batch_consumption_product_batch_id_fkey FOREIGN KEY (product_batch_id) REFERENCES public.product_batches(id),
  CONSTRAINT order_batch_consumption_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.orders (
  order_id text NOT NULL,
  order_date timestamp with time zone NOT NULL,
  customer_name character varying NOT NULL,
  sku character varying NOT NULL,
  product_name character varying,
  order_quantity integer NOT NULL,
  walmart_price_per_unit numeric NOT NULL,
  walmart_shipping_fee_per_unit numeric NOT NULL,
  product_cost_per_unit numeric NOT NULL,
  fulfillment_cost numeric NOT NULL,
  app_settings_id uuid,
  walmart_shipping_total numeric,
  walmart_item_total numeric,
  total_revenue numeric,
  walmart_fee numeric,
  product_cost_total numeric,
  net_profit numeric,
  roi numeric,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  status character varying DEFAULT 'active'::character varying,
  upload_batch_id character varying,
  user_id uuid NOT NULL,
  CONSTRAINT orders_pkey PRIMARY KEY (order_id, sku),
  CONSTRAINT orders_app_settings_id_fkey FOREIGN KEY (app_settings_id) REFERENCES public.app_settings(id),
  CONSTRAINT orders_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT orders_user_id_sku_fkey FOREIGN KEY (sku) REFERENCES public.products(product_sku),
  CONSTRAINT orders_user_id_sku_fkey FOREIGN KEY (user_id) REFERENCES public.products(product_sku),
  CONSTRAINT orders_user_id_sku_fkey FOREIGN KEY (sku) REFERENCES public.products(user_id),
  CONSTRAINT orders_user_id_sku_fkey FOREIGN KEY (user_id) REFERENCES public.products(user_id)
);
CREATE TABLE public.product_batches (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  product_id uuid NOT NULL,
  purchase_date timestamp with time zone NOT NULL,
  quantity_purchased integer NOT NULL CHECK (quantity_purchased >= 0),
  quantity_available integer NOT NULL CHECK (quantity_available >= 0),
  cost_per_item numeric NOT NULL,
  batch_reference character varying,
  user_id uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT product_batches_pkey PRIMARY KEY (id),
  CONSTRAINT product_batches_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT product_batches_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.products (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  quantity integer NOT NULL DEFAULT 0,
  cost_per_item numeric NOT NULL DEFAULT 0,
  purchase_date timestamp with time zone DEFAULT now(),
  source character varying DEFAULT 'walmart'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  sku character varying,
  product_sku character varying,
  product_name character varying,
  image_url text,
  supplier character varying,
  product_link text,
  sales_qty integer DEFAULT 0,
  available_qty integer DEFAULT 0,
  stock_value numeric,
  status character varying DEFAULT 'active'::character varying,
  remarks text,
  user_id uuid NOT NULL,
  per_qty_price numeric,
  purchase_price numeric,
  CONSTRAINT products_pkey PRIMARY KEY (id),
  CONSTRAINT products_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  first_name character varying,
  last_name character varying,
  phone character varying,
  company_name character varying,
  business_type character varying,
  tax_id character varying,
  walmart_seller_id character varying,
  amazon_seller_id character varying,
  address_line1 character varying,
  address_line2 character varying,
  city character varying,
  state character varying,
  postal_code character varying,
  country character varying,
  profile_image_url text,
  is_admin boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.sales (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  product_id uuid,
  quantity_sold integer NOT NULL,
  sale_price numeric NOT NULL,
  shipping_fee_per_unit numeric NOT NULL DEFAULT 0,
  walmart_fee numeric DEFAULT 0,
  sale_date timestamp with time zone DEFAULT now(),
  platform character varying DEFAULT 'walmart'::character varying,
  shipping_cost numeric DEFAULT 0,
  label_cost numeric DEFAULT 0,
  cost_per_unit numeric DEFAULT 0,
  additional_costs numeric DEFAULT 0,
  total_revenue numeric DEFAULT 0,
  net_profit numeric DEFAULT 0,
  profit_margin numeric DEFAULT 0,
  status character varying DEFAULT 'active'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  purchase_order_number text,
  ship_by_date date,
  order_number text,
  fulfilled_by text,
  ship_node text,
  ship_node_id text,
  ship_method text,
  carrier_method text,
  item_condition text,
  user_id uuid NOT NULL,
  CONSTRAINT sales_pkey PRIMARY KEY (id),
  CONSTRAINT sales_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT sales_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);